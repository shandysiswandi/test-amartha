// Code generated by mockery. DO NOT EDIT.

package loanmocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	sqlentity "github.com/shandysiswandi/test-amartha/internal/loan/internal/entity/sqlentity"
)

// MockInsertLoanStore is an autogenerated mock type for the InsertLoanStore type
type MockInsertLoanStore struct {
	mock.Mock
}

type MockInsertLoanStore_Expecter struct {
	mock *mock.Mock
}

func (_m *MockInsertLoanStore) EXPECT() *MockInsertLoanStore_Expecter {
	return &MockInsertLoanStore_Expecter{mock: &_m.Mock}
}

// InsertLoan provides a mock function with given fields: ctx, in
func (_m *MockInsertLoanStore) InsertLoan(ctx context.Context, in sqlentity.Loan) error {
	ret := _m.Called(ctx, in)

	if len(ret) == 0 {
		panic("no return value specified for InsertLoan")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, sqlentity.Loan) error); ok {
		r0 = rf(ctx, in)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockInsertLoanStore_InsertLoan_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'InsertLoan'
type MockInsertLoanStore_InsertLoan_Call struct {
	*mock.Call
}

// InsertLoan is a helper method to define mock.On call
//   - ctx context.Context
//   - in sqlentity.Loan
func (_e *MockInsertLoanStore_Expecter) InsertLoan(ctx interface{}, in interface{}) *MockInsertLoanStore_InsertLoan_Call {
	return &MockInsertLoanStore_InsertLoan_Call{Call: _e.mock.On("InsertLoan", ctx, in)}
}

func (_c *MockInsertLoanStore_InsertLoan_Call) Run(run func(ctx context.Context, in sqlentity.Loan)) *MockInsertLoanStore_InsertLoan_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(sqlentity.Loan))
	})
	return _c
}

func (_c *MockInsertLoanStore_InsertLoan_Call) Return(_a0 error) *MockInsertLoanStore_InsertLoan_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockInsertLoanStore_InsertLoan_Call) RunAndReturn(run func(context.Context, sqlentity.Loan) error) *MockInsertLoanStore_InsertLoan_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockInsertLoanStore creates a new instance of MockInsertLoanStore. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockInsertLoanStore(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockInsertLoanStore {
	mock := &MockInsertLoanStore{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
